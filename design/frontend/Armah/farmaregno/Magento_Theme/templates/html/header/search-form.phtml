<?php

/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;
use Magento\Search\Helper\Data as SearchHelper;
use Hyva\Theme\ViewModel\SvgIcons;

/** @var Escaper $escaper */
/** @var Template $block */
/** @var SearchHelper $helper */

/** @var SvgIcons $hyvaicons */
$hyvaicons = $viewModels->require(SvgIcons::class);

$helper = $this->helper(SearchHelper::class);
?>
<script>
    'use strict';

    function initMiniSearch() {
        return {
            minSearchLength: <?= (int) $helper->getMinQueryLength() ?>,
            suggestions: [],
            suggest() {
                const search = this.$refs.searchInput;
                if (search.value.length >= this.minSearchLength) {
                    search.setCustomValidity('');
                    search.reportValidity();
                    this.fetchSuggestions(search.value);
                } else {
                    this.suggestions = [];
                }
            },
            fetchSuggestions(term) {
                fetch(
                    window.BASE_URL + 'search/ajax/suggest?' + new URLSearchParams({q: term}),
                    {
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    }
                )
                .then(response => response.json())
                .then(result => this.suggestions = result);
            },
            search(term) {
                const search = this.$refs.searchInput;
                term = term || search.value;
                if (term.length < this.minSearchLength) {
                    search.setCustomValidity('<?= $escaper->escapeJs(
                        __('Minimum Search query length is %1', $helper->getMinQueryLength())
                    ) ?>');
                    search.reportValidity();
                } else {
                    search.setCustomValidity('');
                    search.value = term;
                    this.$refs.form.submit();
                }
            },
            focusElement(element) {
                if (element && element.nodeName === "DIV") {
                    element.focus();
                    return true;
                } else {
                    return false;
                }
            }
        }
    }
</script>
<div class="container mx-auto text-black lg:px-0 xl:px-6 lg:h-auto" x-data="{ 
    ...initMiniSearch(), 
    text: '',
    textArray : ['Cerca tra oltre 70.000 prodotti...', 'Ricerca per categoria...', 'Ricerca per prodotto...'],
    textIndex: 0,
    charIndex: 0,
    pauseEnd: 1000,
    cursorSpeed: 420,
    pauseStart: 20,
    typeSpeed: 60,
    direction: 'forward'
}" x-init="(() => { 

    let typingInterval = setInterval(startTyping, $data.typeSpeed);

    function startTyping(){
        let current = $data.textArray[ $data.textIndex ];
        if($data.charIndex > current.length){
            $data.direction = 'backward';
            clearInterval(typingInterval);
            setTimeout(function(){
                typingInterval = setInterval(startTyping, $data.typeSpeed);
            }, $data.pauseEnd);
        }   

        $data.text = current.substring(0, $data.charIndex);
        if($data.direction == 'forward'){
            $data.charIndex += 1;
        } else {
            if($data.charIndex == 0){
                $data.direction = 'forward';
                clearInterval(typingInterval);
                setTimeout(function(){

                    $data.textIndex += 1;
                    if($data.textIndex >= $data.textArray.length){
                        $data.textIndex = 0;
                    }

                    typingInterval = setInterval(startTyping, $data.typeSpeed);
                }, $data.pauseStart);
            }
            $data.charIndex -= 1;
        }

    }

    setInterval(function(){
    if($refs.cursor && $refs.cursor.classList.contains('hidden')){
        $refs.cursor.classList.remove('hidden');
    } else if($refs.cursor) {
        $refs.cursor.classList.add('hidden');
    }
}, $data.cursorSpeed);

    
    suggest();
})()">
<form class="relative form minisearch" id="search_mini_form" x-ref="form" @submit.prevent="search()" action="<?= $escaper->escapeUrl($helper->getResultUrl()) ?>" method="get">
        <label class="hidden" for="search" data-role="minisearch-label">
            <span><?= $escaper->escapeHtml(__('Search')) ?></span>
        </label>
        <input id="search" x-ref="searchInput" type="search" autocomplete="off" name="q" value="" :placeholder="text" maxlength="<?= $escaper->escapeHtmlAttr($helper->getMaxQueryLength()) ?>" class="w-full h-8 px-4 pt-3 text-xs font-normal leading-normal text-gray-800 transition bg-white border-gray-400 rounded appearance-none focus:outline-none focus:ring-0 focus:border-gray-400 lg:text-xs sm:h-9 sm:text-lg" @focus.once="suggest" @input.debounce.300="suggest" @keydown.arrow-down.prevent="focusElement($root.querySelector('[tabindex]'))" />

        <template x-if="suggestions.length > 0">
            <div class="flex flex-col w-full mt-1 leading-normal transition appearance-none text-grey-800">
                <template x-for="suggestion in suggestions">
                    <div class="flex justify-between p-2 mb-1 border cursor-pointer bg-container-lighter even:bg-container border-container hover:bg-container-darker" tabindex="0" @click="search(suggestion.title)" @keydown.enter="search(suggestion.title)" @keydown.arrow-up.prevent="
                              focusElement($event.target.previousElementSibling) || $refs.searchInput.focus()
                          " @keydown.arrow-down.prevent="focusElement($event.target.nextElementSibling)">
                        <span x-text="suggestion.title"></span>
                        <span x-text="suggestion.num_results"></span>
                    </div>
                </template>
            </div>
        </template>
        <button type="submit" title="<?= $escaper->escapeHtml(__('Search')) ?>" class="absolute top-0 right-0 items-center justify-center w-8 h-8 p-0 rounded shadow-none action bg-primary btn lg:hover:bg-primary-lighter lg:mr-1 lg:top-1 md:h-7 md:w-7 search" aria-label="Search">
            <?= $hyvaicons->searchHtml('text-white border-current inline w-5 h-5'); ?>
        </button>
    </form>
</div>