<?php

/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Hyva\Theme\ViewModel\HeroiconsSolid;
use Hyva\Theme\ViewModel\ProductCompare;
use Hyva\Theme\ViewModel\ProductListItem;
use Hyva\Theme\ViewModel\ProductPage;
use Hyva\Theme\ViewModel\Wishlist;
use Magento\Catalog\Block\Product\AbstractProduct;
use Magento\Catalog\Helper\Output as CatalogOutputHelper;
use Magento\Catalog\ViewModel\Product\OptionsData as ProductOptionsData;
use Magento\Framework\Escaper;

// phpcs:disable Magento2.Templates.ThisInTemplate.FoundHelper
// phpcs:disable Generic.Files.LineLength.TooLong

/** @var AbstractProduct $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var ProductPage $productViewModel */
$productViewModel = $viewModels->require(ProductPage::class);

/** @var ProductListItem $productListItemViewModel */
$productListItemViewModel = $viewModels->require(ProductListItem::class);

/** @var CatalogOutputHelper $catalogOutputHelper */
$catalogOutputHelper = $this->helper(CatalogOutputHelper::class);

/** @var ProductCompare $compareViewModel */
$compareViewModel = $viewModels->require(ProductCompare::class);
/** @var Wishlist $wishlistViewModel */
$wishlistViewModel = $viewModels->require(Wishlist::class);

/** @var HeroiconsOutline $heroicons */
$heroicons = $viewModels->require(HeroiconsOutline::class);

/** @var HeroiconsSolid $heroiconsSolid */
$heroiconsSolid = $viewModels->require(HeroiconsSolid::class);

$productOptionsViewmodel = $viewModels->require(ProductOptionsData::class);

/** @var Magento\Catalog\Model\Product $product */
$product = $block->getData('product');
$imageDisplayArea = $block->getData('image_display_area');
$templateType = $block->getData('template_type');
$viewMode = $block->getData('view_mode');
$showDescription = $block->getData('show_description');
$showAddToWishlist = $wishlistViewModel->isEnabled();
$showAddToCompare = $compareViewModel->showInProductList();
$viewIsGrid = $viewMode === 'grid';

if (!$product) {
    return '';
}
$productId = $product->getId();
$options   = $productOptionsViewmodel->getOptionsData($product);
$uniqueId = '_' . uniqid();

$hideDetails       = $block->getData('hide_details') ?: false;
$hideRatingSummary = $block->getData('hide_rating_summary') ?: false;

$imageCustomAttributes = $product->getData('image_custom_attributes')
    ?? $block->getData('image_custom_attributes')
    ?? [];
?>

<?php if ($product->isSaleable()) : ?>
    <form method="post" action="<?= $escaper->escapeUrl($productViewModel->getAddToCartUrl($product)) ?>" class="item product product-item product_addtocart_form card p-0 rounded-b-xl hover:bg-white card-interactive flex flex-col w-full <?= $viewIsGrid ? '' : 'md:flex-row' ?>" <?php if ($product->getOptions()) : ?> enctype="multipart/form-data" <?php endif; ?>>
        <?=
        /** @noEscape */
        $block->getBlockHtml('formkey') ?>
        <input type="hidden" name="product" value="<?= (int)$productId ?>" />
        <?php foreach ($options as $optionItem) : ?>
            <input type="hidden" name="<?= $escaper->escapeHtml($optionItem['name']) ?>" value="<?= $escaper->escapeHtml($optionItem['value']) ?>">
        <?php endforeach; ?>
    <?php else : ?>
        <div class="item product product-item card card-interactive flex flex-col w-full <?= $viewIsGrid ? '' : 'md:flex-row' ?>">
        <?php endif; ?>
        <?php /* Product Image */ ?>
        <a href="<?= $escaper->escapeUrl($product->getProductUrl()) ?>" class="product photo product-item-photo block mx-auto mb-3 <?= $viewIsGrid ? '' : 'md:w-2/6 md:mb-0 md:mr-5' ?>" tabindex="-1">
            <?= $block->getImage($product, $imageDisplayArea)
                ->setTemplate('Magento_Catalog::product/list/image.phtml')
                ->setData('custom_attributes', $imageCustomAttributes)
                ->setProductId($productId)
                ->toHtml(); ?>
        </a>
        <div class="flex flex-col product-info grow">
            <?php $productNameStripped = $block->stripTags($product->getName(), null, true); ?>
            <div class="mt-2 mb-1 items-center justify-center text-primary font-semibold text-base text-center px-8 leading-5 <?= $viewIsGrid ? '' : 'md:text-left' ?>">
                <a class="product-item-link" href="<?= $escaper->escapeUrl($product->getProductUrl()) ?>">
                    <?= /* @noEscape */ $catalogOutputHelper->productAttribute($product, $product->getName(), 'name') ?>
                </a>
            </div>

            <?php if ($product->isAvailable() && !$hideDetails) : ?>
                <?= $block->getProductDetailsHtml($product) ?>
            <?php endif; ?>

            <?php if ($showDescription) : ?>
                <div class="mt-2 mb-1 items-center justify-center text-primary text-center <?= $viewIsGrid ? '' : 'md:text-left' ?>">
                    <?= /* @noEscape */ $productViewModel->getShortDescriptionForProduct($product) ?>
                </div>
            <?php endif; ?>

            <script>
                function initPriceBox_<?=
                                        /** @noEscape */
                                        $uniqueId ?>() {
                    return {
                        updatePrice(priceData) {
                            const regularPriceLabel = this.$root.querySelector('.normal-price .price-label');
                            const regularPriceElement = this.$root.querySelector('.normal-price [data-price-type=finalPrice].price-wrapper .price');
                            const basePriceElement = this.$root.querySelector('.normal-price [data-price-type=basePrice].price-wrapper .price');
                            if (priceData.finalPrice.amount < priceData.oldPrice.amount) {
                                regularPriceLabel.classList.add('hidden');
                            } else {
                                regularPriceLabel.classList.remove('hidden');
                            }
                            regularPriceElement.innerText = hyva.formatPrice(priceData.finalPrice.amount);
                            basePriceElement && (basePriceElement.innerText = hyva.formatPrice(priceData.basePrice.amount));
                        }
                    }
                }
            </script>
            <div class="flex items-end justify-center h-full pt-1 text-center text-gray-900" x-data="initPriceBox_<?=
                                                                                                                    /** @noEscape */
                                                                                                                    $uniqueId ?>()" @update-prices-<?= (int)$productId ?>.window="updatePrice($event.detail);">
                <?= /* @noEscape */ $productListItemViewModel->getProductPriceHtml($product) ?>
            </div>

            <?php
            $finalPrice = (float)$product->getFinalPrice();
            $price = (float)$product->getPrice();
            if ($finalPrice < $price) {
                $discount = 100 - round(($finalPrice / $price) * 100);
            } else {
                $discount = 0;
            }
            ?>

            <div class="">
                <?php if ($product->getIsSalable()) : ?>
                    <p class="flex items-center justify-center mt-2 align-middle available stock">
                        <?php if ($product->getTypeId() == "simple" and $discount > 0) : ?>
                            <span class="flex items-center justify-center w-full h-8 mb-0.5 text-base font-bold text-white bg-primary rounded-none">

                                <span class="flex items-center justify-center h-full sm:text-base md:text-xl lg:text-base"><?= $discount ?>%
                                    <?= $escaper->escapeHtml(__('saving')) ?></span>
                            </span>
                        <?php else : ?>
                    <p class="flex items-center justify-center mt-2 align-middle available stock">
                        <span class="flex items-center justify-center w-full py-1 mb-0.5 text-base font-bold text-white bg-primary rounded-none">
                            <?= $escaper->escapeHtmlAttr(__('Availabile')) ?>
                        </span>
                    </p>
                <?php endif; ?>


                </p>
            <?php else : ?>
                <p class="hidden">
                </p>
            <?php endif; ?>
            <div class="flex items-center justify-center">
                <?php if ($product->isSaleable()) : ?>
                    <button class="w-full btn bg-arancio hover:bg-arancio-darker rounded-t-none rounded-b-xl justify-center text-lg uppercase text-white font-bold
                        <?= $viewIsGrid ? 'mr-auto' : 'mr-auto md:mr-0' ?>" aria-label="<?= $escaper->escapeHtmlAttr(__('Purchase')) ?>">
                        <span class="ml-2 inline <?= $viewIsGrid ? 'md:ml-0 lg:ml-2 lg:inline' : '' ?>">
                            <?= $escaper->escapeHtml(__('Purchase')) ?>
                        </span>
                    </button>
                <?php else : ?>
                    <div class="w-auto justify-center <?= $viewIsGrid ? 'mr-auto' : 'mr-auto md:mr-0' ?>">
                        <?= $block->getChildBlock('stockstatus')->setData('product', $product)->toHtml() ?>
                    </div>
                <?php endif; ?>
            </div>
            </div>
        </div>
        <?php if ($product->isSaleable()) : ?>
    </form>
<?php else : ?>
    </div>
<?php endif; ?>